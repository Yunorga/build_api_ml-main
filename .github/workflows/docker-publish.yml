name: Build & Publish Docker Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set environment variable for lowercase image repo
        run: |
          REPO_NAME_LOWERCASE=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "DOCKER_IMAGE_REPO=ghcr.io/$REPO_NAME_LOWERCASE" >> $GITHUB_ENV
        shell: bash

      - name: Build and tag Docker Images
        run: |
          REPO="$DOCKER_IMAGE_REPO"
          
          # Construire et taguer les images avec ghcr.io
          docker build -t "$REPO/mlops_backend:latest" ./backend
          docker build -t "$REPO/mlops_frontend:latest" ./frontend

      - name: Push Docker Images
        run: |
          REPO="$DOCKER_IMAGE_REPO"

          # Pousser les images vers GitHub Container Registry
          docker push "$REPO/mlops_backend:latest"
          docker push "$REPO/mlops_frontend:latest"


# name: Build & Publish Docker Images

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   build-and-push:
#     name: Build and Push Docker Images
#     runs-on: ubuntu-latest

#     permissions:
#       contents: read
#       packages: write

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Log in to GitHub Container Registry
#         run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

#       - name: Set environment variable for lowercase image repo
#         run: |
#           REPO_NAME_LOWERCASE=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
#           echo "DOCKER_IMAGE_REPO=ghcr.io/$REPO_NAME_LOWERCASE" >> $GITHUB_ENV
#         shell: bash

#       - name: Build Docker Images using Docker Compose
#         run: |
#           cd hands_on_microservices
#           docker compose build

#       - name: Push Docker Images
#         run: |
#           cd hands_on_microservices
          
#           # Récupérer le repo en minuscules défini dans les variables d'environnement
#           REPO="$DOCKER_IMAGE_REPO"

#           # Liste des services à pousser
#           SERVICES=("serveur" "client")

#           for SERVICE in "${SERVICES[@]}"; do
#             IMAGE_NAME="${REPO}/${SERVICE}:latest"

#             echo "Pushing $IMAGE_NAME"
#             docker push $IMAGE_NAME
#           done


# name: Build & Publish Docker Images

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   build-and-push:
#     name: Build and Push Docker Images
#     runs-on: ubuntu-latest

#     permissions:
#       contents: read
#       packages: write

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Log in to GitHub Container Registry
#         run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

#       - name: Set docker_image_full variable
#         run: |
#           echo "docker_image_full=my-image-name:latest" >> $GITHUB_ENV # Exemple: nom de l'image et tag

#       - name: Build and Push Docker Images using Docker Compose
#         run: |
#           cd hands_on_microservices
#           docker compose build
#           docker compose push


# # name: Build & Publish Docker Image

# # on:
# #   push:
# #     branches:
# #       - main
# #   pull_request:
# #     branches:
# #       - main

# # jobs:
# #   build-and-push:
# #     name: Build and Push Docker Image
# #     runs-on: ubuntu-latest

# #     permissions:
# #       contents: read
# #       packages: write

# #     steps:
# #       - name: Checkout Repository
# #         uses: actions/checkout@v4

# #       - name: Log in to GitHub Container Registry
# #         run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

# #       - name: Extract Metadata for Docker
# #         id: meta
# #         uses: docker/metadata-action@v5
# #         with:
# #           images: ghcr.io/${{ github.repository }}

# #       - name: Build and Push Docker Image
# #         uses: docker/build-push-action@v5
# #         with:
# #           context: hands_on_microservices/serveur
# #           push: true
# #           tags: ${{ steps.meta.outputs.tags }}
# #           labels: ${{ steps.meta.outputs.labels }}
